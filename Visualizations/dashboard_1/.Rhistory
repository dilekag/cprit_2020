library(rgdal)
library(sf)
library(readxl)
library(ggplot2)
library(leaflet)
library(tidyr)
#Set working directory to GitHub folder
setwd("C:/Users/Dilek/OneDrive/Documents/GitHub/cprit_2020/visualizations/dashboard_1")
# Extract TX map data for plotting
map_data <- readOGR(dsn = "Texas_Counties")
# Extract TX data regarding 1995 lung cancer SIR's
data <- read_excel("county_sir_data.xlsx", sheet = 1)
# sheet = 1 --> All histologic types
# sheet = 2 --> Adenocarcinoma
# sheet = 3 --> Small Cell Carcinoma
# sheet = 4 --> Squamous Cell Carcinoma
# sheet = 5 --> Other Non-small Cell Carcinoma
rurality <- read_excel("socioeconomic_data.xlsx", sheet = 1)
poverty <- read_excel("socioeconomic_data.xlsx", sheet = 2)
soci_data <- merge(data, rurality, by = c("County_Code","Year"))
soci_data <- merge(soci_data, poverty, by = c("County_Code","Year"))
soci_data <- data.frame(soci_data)
soci_data$County_Code <- as.factor(soci_data$County_Code)
soci_data$idarea <- as.numeric(soci_data$County_Code)
soci_data$e <- 1:nrow(soci_data)
soci_data$idtime <- 1 + soci_data$Year- min(soci_data$Year)
soci_data$Observed <- as.integer(soci_data$Observed)
formula <- Observed ~ Rurality_Score + Poverty_Rate +
f(idarea, model = "generic1", Cmatrix = C) + #mat_c()
f(e, model = "iid") +
f(idtime, model = "rw2", constr = T)
inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
library(inla)
library(INLA)
head(soci_data)
inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
formula <- Observed ~ Rurality_Score + Poverty_Rate +
f(idarea, model = "generic1", Cmatrix = C) + #mat_c()
f(e, model = "iid") +
f(idtime, model = "rw2", constr = T)
inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
tx_nb <- poly2nb(map_data)
library(spdep)
tx_nb <- poly2nb(map_data)
Q <- Diagonal(x = sapply(tx_nb, length))
for(i in 2:nrow(map_data)) {
Q[i - 1, i] <- -1
Q[i, i - 1] <- -1
}
C <- Diagonal(x = 1, n = nrow(map_data)) - Q
inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
res <- inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
library(ggplot2)
marginal <- inla.smarginal(res$marginals.fixed$Rurality_Score)
marginal <- data.frame(marginal)
ggplot(marginal, aes(x=x, y=y)) + geom_line() + theme_bw()
