x = 10
if (x >7) {y <- 4, p <- 3}
x = 10
if (x >7) {y <- 4 p <- 3}
if (x >7) {y <- 4  && p <- 3}
if (x >7) {y <- 4; p <- 3}
shiny::runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
plot(c(1,2,3), c(1,2,3))
points(c(7,11))
points(c(1,2))
points(c(2,1.7))
lst <- c(1,2,3,4)
lst <- lst/max(lst)
lst
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='dilekag', token='04DD119B418F243B894DB759D1C09137', secret='2z2c6yqCq6Y3igXFHPrH6xm0A6NjnIvsDgTgD/KI')
library(rsconnect)
rsconnect::deployApp('C:\Users\Dilek\Documents\GitHub\cprit_2020\Visualizations\dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
library(rsconnect)
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
getOptions("repos")
getOption("repos")
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
getOption("repos")
shiny::runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
rsconnect::deployApp('C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1')
shiny::runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
install.packages("MathJax")
library(MathJax)
install.packages(MathJax)
load(MathJax)
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
shiny::runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
check_SIRAll <- read_excel("county_rates_all_years.xlsx", sheet = 1)
reshape1 <- function(data) {
data <- gather(data, key = "Year")
data <- subset(data, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data <- cbind(data, rep(seq(48001, 48507, by = 2),5))
colnames(data) <- c("Year","Rate","County")
data
}
countyRatesAll <- reshape1(check_SIRAll)
head(countyRatesAll)
range(countyRatesAll$Rate)
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
check_SIRAll <- read_excel("county_rates_all_years.xlsx", sheet = 2)
reshape1 <- function(data) {
data <- gather(data, key = "Year")
data <- subset(data, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data <- cbind(data, rep(seq(48001, 48507, by = 2),5))
colnames(data) <- c("Year","Rate","County")
data
}
countyRatesAll <- reshape1(check_SIRAll)
range(countyRatesAll$Rate)
quantile(countyRatesAll, c(0.025,0.975))
quantile(countyRatesAll$Rate, c(0.025,0.975))
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
check_SIRAll <- read_excel("county_rates_all_years.xlsx", sheet = 1)
reshape1 <- function(data) {
data <- gather(data, key = "Year")
data <- subset(data, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data <- cbind(data, rep(seq(48001, 48507, by = 2),5))
colnames(data) <- c("Year","Rate","County")
data
}
countyRatesAll <- reshape1(check_SIRAll)
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
check_SIRAll <- read_excel("county_rates_all_years.xlsx", sheet = 1)
reshape1 <- function(data) {
data <- gather(data, key = "Year")
data <- subset(data, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data <- cbind(data, rep(seq(48001, 48507, by = 2),5))
colnames(data) <- c("Year","Rate","County")
data
}
countyRatesAll <- reshape1(check_SIRAll)
quantile(countyRatesAll$Rate, c(0.025,0.975))
quantile(countyRatesAll$Rate, c(0.025,0.975))[2]
round(3.4)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
countyAllYearsSIRAll <- read_excel("all_years_by_hist.xlsx", sheet = 1)
countySIRAll <- subset(countyAllYearsSIRAll, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
head(countySIRAll)
m <- round((quantile(countySIRAll$Expected, c(0.025,0.975))[2] - quantile(countySIRAll$Expected, c(0.025,0.975))[1])/20)
m
m <- quantile(countySIRAll$Expected, c(0.025,0.975))[2] - quantile(countySIRAll$Expected, c(0.025,0.975))[1]
m
quantile(countySIRAll$Expected, c(0.025,0.975))[2]
quantile(countySIRAll$Expected, c(0.025,0.975))[1]
m <- round((quantile(countySIRAll$Expected, c(0.025,0.975))[2] - quantile(countySIRAll$Expected, c(0.025,0.975))[1])/20)
class(m)
m <- as.integer(m)
m
runApp()
m <- quantile(countySIRAll$SIR, c(0.025,0.975))[2] - quantile(countySIRAll$SIR, c(0.025,0.975))[1]
m
runApp()
runApp()
marker <- "Expected"
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
map_data <- readOGR(dsn = "Texas_Counties")
countyAllYearsSIRAll <- read_excel("all_years_by_hist.xlsx", sheet = 1)
countyAllYearsSIRAdeno <- read_excel("all_years_by_hist.xlsx", sheet = 2)
countyAllYearsSIRSmall <- read_excel("all_years_by_hist.xlsx", sheet = 3)
countyAllYearsSIRSquamous <- read_excel("all_years_by_hist.xlsx", sheet = 4)
countyAllYearsSIROther <- read_excel("all_years_by_hist.xlsx", sheet = 5)
#SIR data by county (5-Year Intervals)
countySIRAll <- subset(countyAllYearsSIRAll, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIRAdeno <- subset(countyAllYearsSIRAdeno, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIRSmall <- subset(countyAllYearsSIRSmall, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIRSquamous <- subset(countyAllYearsSIRSquamous, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIROther <- subset(countyAllYearsSIROther, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data5 <- countySIRAll
county_data <- data.frame(data5)
marker <- "Expected"
m <- as.integer(round((quantile(county_data$marker, c(0.025,0.975))[2] - quantile(county_data$marker, c(0.025,0.975))[1])/30))
inp <- toString(marker)
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, inp, paste0(inp,".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number(inp, m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
head(ttx_data_map_sf)
head(tx_data_map_sf)
n
data5 <- countySIRAll
county_data <- data.frame(data5)
marker <- "Expected"
m <- as.integer(round((quantile(county_data$marker, c(0.025,0.975))[2] - quantile(county_data$marker, c(0.025,0.975))[1])/30))
inp <- marker
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, marker, paste0(marker,".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number(marker, m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
head(tx_data_map_sf)
runApp()
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, marker, paste0("Expected",".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
data5 <- countySIRAll
county_data <- data.frame(data5)
marker <- "Expected"
m <- as.integer(round((quantile(county_data$marker, c(0.025,0.975))[2] - quantile(county_data$marker, c(0.025,0.975))[1])/30))
inp <- marker
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, marker, paste0("Expected",".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number("Expected", m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
head(tx_data_map_sf)
m <- as.integer(round((quantile(county_data$marker, c(0.025,0.975))[2] - quantile(county_data$marker, c(0.025,0.975))[1])/30))
inp <- marker
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, "Expected" , paste0("Expected",".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number("Expected", m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
head(tx_data_map_sf)
tx_data_map_sf$Year
tx_data_map_sf$Expected
dim(tx_data_map_sf)
dim(tx_data_map_sf$SIR.2010)
length(tx_data_map_sf$SIR.2010)
m
m <- as.integer(round((quantile(county_data$marker, c(0.025,0.975))[2] - quantile(county_data$marker, c(0.025,0.975))[1])/30))
m
marker
m <- as.integer(round((quantile(county_data$marker, c(0.025,0.975))[2] - quantile(county_data$marker, c(0.025,0.975))[1])/10))
m
county_data$marker
head(county_data)
county_data$"Expected"
runApp()
marker = "Expected"
county_data$marker
county_data$"Expected"
county_data$marker[1]
county_data[marker,]
county_data[,marker]
setwd("C:/Users/Dilek/Documents/GitHub/cprit_2020/Visualizations/dashboard_1")
map_data <- readOGR(dsn = "Texas_Counties")
countyAllYearsSIRAll <- read_excel("all_years_by_hist.xlsx", sheet = 1)
countyAllYearsSIRAdeno <- read_excel("all_years_by_hist.xlsx", sheet = 2)
countyAllYearsSIRSmall <- read_excel("all_years_by_hist.xlsx", sheet = 3)
countyAllYearsSIRSquamous <- read_excel("all_years_by_hist.xlsx", sheet = 4)
countyAllYearsSIROther <- read_excel("all_years_by_hist.xlsx", sheet = 5)
#SIR data by county (5-Year Intervals)
countySIRAll <- subset(countyAllYearsSIRAll, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIRAdeno <- subset(countyAllYearsSIRAdeno, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIRSmall <- subset(countyAllYearsSIRSmall, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIRSquamous <- subset(countyAllYearsSIRSquamous, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
countySIROther <- subset(countyAllYearsSIROther, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data5 <- countySIRAll
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/10))
inp <- marker
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, "Expected" , paste0("Expected",".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number("Expected", m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number("Expected", m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
head(tx_data_map_sf)
m
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/30))
m
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number("Expected", m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
inp
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number(Expected, m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
runApp()
runApp()
runApp()
runApp()
as.string(ds)
as.char(vndj)
paste(1,2,3)
runApp()
countyAllYearsSIRAll <- read_excel("all_years_by_hist.xlsx", sheet = 1)
#SIR data by county (5-Year Intervals)
countySIRAll <- subset(countyAllYearsSIRAll, Year == 1995 | Year == 2000 | Year == 2005 | Year == 2010 | Year == 2015)
data5 <- countySIRAll
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/30))
inp <- marker
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, "Expected" , paste0("Expected",".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number(Expected, m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
runApp()
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/30))
inp <- marker
n <- nchar(inp)
wide <- reshape(county_data,
timevar = "Year",
idvar = "County_Code",
direction = "wide")
tx_data_map <- merge(map_data, wide, by.x = "FIPS_ST_CN", by.y = "County_Code")
tx_data_map_sf <- st_as_sf(tx_data_map)
tx_data_map_sf <- gather(tx_data_map_sf, Year, marker, paste0(marker,".", c(1995, 2000, 2005, 2010, 2015)))
tx_data_map_sf$Year <- as.integer(substring(tx_data_map_sf$Year, (n+2), (n+5)))
ggplot(tx_data_map_sf) + geom_sf(aes(fill = cut_number(marker, m))) +
facet_wrap(~Year, dir = "h", ncol = 3) +
theme_bw() +
theme(line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank()
) +
scale_fill_brewer(inp, palette = "OrRd")
runApp()
data5 <- countySIRSmall
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/30))
m
quantile(county_data[,marker], c(0.025,0.975))
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/18))
m
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/18))
data5 <- countySIROther
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/18))
m
data5 <- countySIRAll
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.025,0.975))[2] - quantile(county_data[,marker], c(0.025,0.975))[1])/18))
m
data5 <- countySIRAll
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.1,0.9))[2] - quantile(county_data[,marker], c(0.1,0.9))[1])/15))
m
data5 <- countySIRSmall
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.1,0.9))[2] - quantile(county_data[,marker], c(0.1,0.9))[1])/15))
m
m <- as.integer(round((quantile(county_data[,marker], c(0.1,0.9))[2] - quantile(county_data[,marker], c(0.1,0.9))[1])/10))
m
m <- as.integer(round((quantile(county_data[,marker], c(0.1,0.9))[2] - quantile(county_data[,marker], c(0.1,0.9))[1])/8))
m
m <- as.integer(round((quantile(county_data[,marker], c(0.1,0.9))[2] - quantile(county_data[,marker], c(0.1,0.9))[1])/5))
m
data5 <- countySIRAll
county_data <- data.frame(data5)
marker = "Expected"
m <- as.integer(round((quantile(county_data[,marker], c(0.1,0.9))[2] - quantile(county_data[,marker], c(0.1,0.9))[1])/5))
m
data5 <- countySIRAll
county_data <- data.frame(data5)
marker = "Expected"
quantile(county_data[,marker], c(0.025,0.975))
runApp()
runApp()
runApp()
runApp()
