shiny::runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('GitHub/cprit_2020/Visualizations/dashboard_1')
#Set working directory to GitHub folder
setwd("C:/Users/Dilek/OneDrive/Documents/GitHub/cprit_2020/visualizations/dashboard_1")
#Set working directory to GitHub folder
setwd("GitHub/cprit_2020/visualizations/dashboard_1")
# Extract TX map data for plotting
map_data <- readOGR(dsn = "Texas_Counties")
# Extract TX data regarding 1995 lung cancer SIR's
data <- read_excel("county_sir_data.xlsx", sheet = 1)
# sheet = 1 --> All histologic types
# sheet = 2 --> Adenocarcinoma
# sheet = 3 --> Small Cell Carcinoma
# sheet = 4 --> Squamous Cell Carcinoma
# sheet = 5 --> Other Non-small Cell Carcinoma
rurality <- read_excel("socioeconomic_data.xlsx", sheet = 1)
poverty <- read_excel("socioeconomic_data.xlsx", sheet = 2)
soci_data <- merge(data, rurality, by = c("County_Code","Year"))
soci_data <- merge(soci_data, poverty, by = c("County_Code","Year"))
soci_data <- data.frame(soci_data)
soci_data$County_Code <- as.factor(soci_data$County_Code)
soci_data$idarea <- as.numeric(soci_data$County_Code)
soci_data$e <- 1:nrow(soci_data)
soci_data$idtime <- 1 + soci_data$Year- min(soci_data$Year)
soci_data$Observed <- as.integer(soci_data$Observed)
formula <- Observed ~ Rurality_Score + Poverty_Rate +
f(idarea, model = "generic1", Cmatrix = C) + #mat_c()
f(e, model = "iid") +
f(idtime, model = "rw2", constr = T)
res <- inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
Q <- Diagonal(x = sapply(tx_nb, length))
tx_nb <- poly2nb(map_data)
Q <- Diagonal(x = sapply(tx_nb, length))
for(i in 2:nrow(map_data)) {
Q[i - 1, i] <- -1
Q[i, i - 1] <- -1
}
C <- Diagonal(x = 1, n = nrow(map_data)) - Q
formula <- Observed ~ Rurality_Score + Poverty_Rate +
f(idarea, model = "generic1", Cmatrix = C) + #mat_c()
f(e, model = "iid") +
f(idtime, model = "rw2", constr = T)
res <- inla(formula,
family = "poisson", data = soci_data, E = Expected,
control.predictor = list(compute = TRUE), control.compute = list(dic = TRUE, waic = TRUE, cpo = TRUE))
res$summary.fixed
res$summary.fixed[,c("0.025quant", "0.975quant")]
class(res$summary.fixed[,c("0.025quant", "0.975quant")])
res$summary.fixed[c("Rurality_Score", "Poverty_Rate"),c("0.025quant", "0.975quant")]
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
setwd("~/GitHub/cprit_2020/Analysis/SEER Lung Cancer Data Tables")
library(excel)
read_excel("TX by County Rates.xlsx")
x <- read_excel("TX by County Rates.xlsx")
head(x)
head(x)
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
x <- read_excel("TX by County Rates.xlsx", sheet = 2)
head(x)
plot(1995:2015, x[1,])
plot(c(1995:2015), x[1,])
length(x[1,])
View(x)
plot(c(1995:2015), x[1,2:22])
plot(c(1995:2015), x[101,2:22])
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
runApp('~/GitHub/cprit_2020/Visualizations/dashboard_1')
